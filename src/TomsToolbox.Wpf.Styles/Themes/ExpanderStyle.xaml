<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:styles="clr-namespace:TomsToolbox.Wpf.Styles">

  <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#FF000000"/>
  <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF000000"/>
  <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070"/>
  <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FF333333"/>

  <Style x:Key="ExpanderHeaderFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border>
            <Grid Background="Transparent" SnapsToDevicePixels="False">
              <Grid.RowDefinitions>
                <RowDefinition Height="19"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid>
                <Grid.LayoutTransform>
                  <RotateTransform Angle="-90"/>
                </Grid.LayoutTransform>
                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" 
                      Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="2" VerticalAlignment="Center"/>
              </Grid>
              <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border>
            <Grid Background="Transparent" SnapsToDevicePixels="False">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="19"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid>
                <Grid.LayoutTransform>
                    <RotateTransform Angle="180"/>
                </Grid.LayoutTransform>
                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" 
                      Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="2" VerticalAlignment="Center"/>
              </Grid>
              <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border>
            <Grid Background="Transparent" SnapsToDevicePixels="False">
              <Grid.RowDefinitions>
                <RowDefinition Height="19"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid>
                <Grid.LayoutTransform>
                    <RotateTransform Angle="90"/>
                </Grid.LayoutTransform>
                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" 
                      Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="2" VerticalAlignment="Center"/>
              </Grid>
              <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"  BorderThickness="0,0,0,1">
            <Grid Background="Transparent" SnapsToDevicePixels="False" Margin="0,4,4,3">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="19"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Path x:Name="arrow" Data="M 2.5,2 L 6,5.5 L 2.5,9" HorizontalAlignment="Center" SnapsToDevicePixels="false" 
                    Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="2" VerticalAlignment="Center"/>
              <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="Data" TargetName="arrow" Value="M 1,1.5 L 4.5,5 L 8,1.5"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Static styles:ResourceKeys.ExpanderStyle}" TargetType="{x:Type Expander}">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="UseLayoutRounding" Value="True" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
            <DockPanel>
              <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" 
                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                            Content="{TemplateBinding Header}" 
                            DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" 
                            FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" 
                            FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" 
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                            MinWidth="0" MinHeight="0"
                            Style="{StaticResource ExpanderDownHeaderStyle}" 
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
              <ContentPresenter x:Name="ExpandSite" Visibility="Collapsed" DockPanel.Dock="Bottom" Focusable="false" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                Margin="{TemplateBinding Padding}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
              <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsExpanded" Value="False">
              <Setter Property="Margin" TargetName="HeaderSite" Value="0,0,0,-1"/>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Right">
              <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
              <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
              <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Up">
              <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
              <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
              <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Left">
              <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
              <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
              <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>
